// <auto-generated />
using System;
using Ekbatan.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ekbatan.DataLayer.Migrations
{
    [DbContext(typeof(EkbatanDbContext))]
    partial class EkbatanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ekbatan.DomainClasses.Customer.Customer", b =>
                {
                    b.Property<int>("Customer_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<string>("CFamily")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("MelliCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<int?>("SHNo");

                    b.HasKey("Customer_ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.FrontAge.FrontAge", b =>
                {
                    b.Property<int>("FrontAge_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FrontAge_Desc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("FrontAge_ID");

                    b.ToTable("FrontAges");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.Images.Images", b =>
                {
                    b.Property<int>("Image_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName");

                    b.Property<int>("ImageType_ID");

                    b.Property<string>("Image_Desc");

                    b.Property<int>("Object_ID");

                    b.HasKey("Image_ID");

                    b.HasIndex("ImageType_ID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.Images.ImageType", b =>
                {
                    b.Property<int>("ImageType_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageType_desc")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("ImageType_ID");

                    b.ToTable("ImageTypes");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.Karbari.Karbari", b =>
                {
                    b.Property<int>("Karbari_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Karbari_Desc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Karbari_ID");

                    b.ToTable("Karbaris");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.MContract.MContract", b =>
                {
                    b.Property<int>("Contract_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Contract_Date");

                    b.Property<string>("Contract_No")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Mel_ID")
                        .HasMaxLength(200);

                    b.HasKey("Contract_ID");

                    b.ToTable("MContracts");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.MContract.SubContract", b =>
                {
                    b.Property<int>("SubContract_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Customer_ID");

                    b.Property<int?>("MContractContract_ID");

                    b.Property<int>("Melk_ID");

                    b.Property<float>("Sahm");

                    b.HasKey("SubContract_ID");

                    b.HasIndex("MContractContract_ID");

                    b.ToTable("SubContracts");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.Melk", b =>
                {
                    b.Property<int>("Melk_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<bool>("Anbari");

                    b.Property<bool>("Balkon");

                    b.Property<int?>("CFloor");

                    b.Property<bool>("Elevator");

                    b.Property<int?>("FrontAge_ID");

                    b.Property<int?>("Karbari_ID")
                        .IsRequired();

                    b.Property<float?>("MAnbari");

                    b.Property<double?>("MArseh");

                    b.Property<double?>("MAyan");

                    b.Property<int?>("MContractContract_ID");

                    b.Property<int?>("MelkPosition_ID");

                    b.Property<int>("MelkType_ID");

                    b.Property<int?>("NFloor");

                    b.Property<string>("PAsli");

                    b.Property<string>("PFarei");

                    b.Property<bool>("Parking");

                    b.Property<int>("Project_ID");

                    b.Property<int?>("ShPosition");

                    b.HasKey("Melk_ID");

                    b.HasIndex("FrontAge_ID");

                    b.HasIndex("Karbari_ID");

                    b.HasIndex("MContractContract_ID");

                    b.HasIndex("MelkPosition_ID");

                    b.HasIndex("MelkType_ID");

                    b.HasIndex("Project_ID");

                    b.ToTable("Melks");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.MelkPosition.MelkPosition", b =>
                {
                    b.Property<int>("MelkPosition_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MelkPosition_Desc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("MelkPosition_ID");

                    b.ToTable("MelkPositions");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.MelkType.MelkType", b =>
                {
                    b.Property<int>("MelkType_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeMelk_Desc")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("MelkType_ID");

                    b.ToTable("MelkTypes");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.Project.Project", b =>
                {
                    b.Property<int>("Project_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("PEnd_Date");

                    b.Property<DateTime?>("PStart_Date");

                    b.Property<DateTime?>("Parv_Date");

                    b.Property<DateTime?>("Payan_Date");

                    b.Property<string>("Project_name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Project_ID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.Images.Images", b =>
                {
                    b.HasOne("Ekbatan.DomainClasses.Images.ImageType", "ImageType")
                        .WithMany("Images")
                        .HasForeignKey("ImageType_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.MContract.SubContract", b =>
                {
                    b.HasOne("Ekbatan.DomainClasses.MContract.MContract", "MContract")
                        .WithMany("SubContracts")
                        .HasForeignKey("MContractContract_ID");
                });

            modelBuilder.Entity("Ekbatan.DomainClasses.Melk", b =>
                {
                    b.HasOne("Ekbatan.DomainClasses.FrontAge.FrontAge", "FrontAge")
                        .WithMany("Melks")
                        .HasForeignKey("FrontAge_ID");

                    b.HasOne("Ekbatan.DomainClasses.Karbari.Karbari", "Karbari")
                        .WithMany("Melks")
                        .HasForeignKey("Karbari_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ekbatan.DomainClasses.MContract.MContract", "MContract")
                        .WithMany("Melks")
                        .HasForeignKey("MContractContract_ID");

                    b.HasOne("Ekbatan.DomainClasses.MelkPosition.MelkPosition", "MelkPosition")
                        .WithMany("Melks")
                        .HasForeignKey("MelkPosition_ID");

                    b.HasOne("Ekbatan.DomainClasses.MelkType.MelkType", "MelkType")
                        .WithMany("Melks")
                        .HasForeignKey("MelkType_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ekbatan.DomainClasses.Project.Project", "Project")
                        .WithMany("Melks")
                        .HasForeignKey("Project_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
